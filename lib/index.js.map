{"version":3,"file":"index.js","mappings":"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","sources":["webpack://inject-loader/./src/index.ts","webpack://inject-loader/./src/injectify.ts","webpack://inject-loader/./src/wrapper_template.ts","webpack://inject-loader/./src/wrapper_template_esm.ts","webpack://inject-loader/external commonjs \"@babel/core\"","webpack://inject-loader/webpack/bootstrap","webpack://inject-loader/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst injectify_1 = __importDefault(require(\"./injectify\"));\nfunction loader(content, sourceMap) {\n    if (this.cacheable) {\n        this.cacheable();\n    }\n    const { code, map } = (0, injectify_1.default)(this, content, sourceMap);\n    this.callback(null, code, map);\n}\nexports.default = loader;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"@babel/core\");\nconst wrapper_template_1 = __importDefault(require(\"./wrapper_template\"));\nconst wrapper_template_esm_1 = __importDefault(require(\"./wrapper_template_esm\"));\nconst processRequireCall = (path) => {\n    core_1.types.assertStringLiteral(path.node.arguments[0]);\n    const dependencyString = path.node.arguments[0].value;\n    path.replaceWith(core_1.types.expressionStatement(core_1.types.conditionalExpression(core_1.types.callExpression(core_1.types.memberExpression(core_1.types.identifier('__injections'), core_1.types.identifier('hasOwnProperty'), false), [core_1.types.stringLiteral(dependencyString)]), core_1.types.memberExpression(core_1.types.identifier('__injections'), core_1.types.stringLiteral(dependencyString), true), path.node)));\n    return dependencyString;\n};\nconst processImport = (path) => {\n    const { node } = path;\n    const dependencyString = node.source.value;\n    const injectionStatements = [];\n    const aliasedSpecifiers = node.specifiers.map((specifier) => {\n        const localIdentifier = specifier.local;\n        // ex: __React\n        const aliasIdentifier = core_1.types.identifier(`__${localIdentifier.name}`);\n        // __injections['react']\n        let injectionExpression = core_1.types.memberExpression(core_1.types.identifier('__injections'), core_1.types.stringLiteral(dependencyString), true);\n        if (core_1.types.isImportSpecifier(specifier)) {\n            // __injections['react'].Component\n            injectionExpression = core_1.types.memberExpression(injectionExpression, specifier.imported);\n        }\n        injectionStatements.push(core_1.types.variableDeclaration('var', [\n            core_1.types.variableDeclarator(localIdentifier, core_1.types.conditionalExpression(core_1.types.callExpression(core_1.types.memberExpression(core_1.types.identifier('__injections'), core_1.types.identifier('hasOwnProperty'), false), [core_1.types.stringLiteral(dependencyString)]), injectionExpression, aliasIdentifier)),\n        ]));\n        // eslint-disable-next-line no-param-reassign\n        specifier.local = aliasIdentifier;\n        return specifier;\n    });\n    const aliasedImport = core_1.types.importDeclaration(aliasedSpecifiers, node.source);\n    path.replaceWithMultiple(injectionStatements);\n    return {\n        node: aliasedImport,\n        dependencyString,\n    };\n};\nconst processDynamicImport = (path) => {\n    core_1.types.assertStringLiteral(path.node.arguments[0]);\n    const dependencyString = path.node.arguments[0].value;\n    path.replaceWith(core_1.types.expressionStatement(core_1.types.conditionalExpression(core_1.types.callExpression(core_1.types.memberExpression(core_1.types.identifier('__injections'), core_1.types.identifier('hasOwnProperty'), false), [core_1.types.stringLiteral(dependencyString)]), core_1.types.callExpression(core_1.types.memberExpression(core_1.types.identifier('Promise'), core_1.types.identifier('resolve'), false), [\n        core_1.types.memberExpression(core_1.types.identifier('__injections'), core_1.types.stringLiteral(dependencyString), true),\n    ]), path.node)));\n    return dependencyString;\n};\n// module.exports[exportIdentifier] = localIdentifier\nconst createExportAssignment = (exportIdentifier, localIdentifier) => core_1.types.expressionStatement(core_1.types.assignmentExpression('=', core_1.types.memberExpression(core_1.types.memberExpression(core_1.types.identifier('module'), core_1.types.identifier('exports'), false), exportIdentifier, false), localIdentifier));\nconst processDefaultExport = (path) => {\n    let exportAssignment = null;\n    const { declaration } = path.node;\n    if (core_1.types.isFunctionDeclaration(declaration)) {\n        exportAssignment = createExportAssignment(core_1.types.identifier('default'), core_1.types.functionExpression(declaration.id, declaration.params, declaration.body, declaration.generator, declaration.async));\n    }\n    else if (core_1.types.isExpression(path.node.declaration)) {\n        exportAssignment = createExportAssignment(core_1.types.identifier('default'), path.node.declaration);\n    }\n    if (exportAssignment != null) {\n        path.replaceWith(exportAssignment);\n    }\n};\nconst processNamedExport = (path) => {\n    let statements = [];\n    const { declaration } = path.node;\n    if (declaration) {\n        statements.push(declaration);\n        if (core_1.types.isVariableDeclaration(declaration)) {\n            declaration.declarations.forEach((d) => {\n                core_1.types.assertExpression(d.id);\n                statements.push(createExportAssignment(d.id, d.init && core_1.types.isLiteral(d.init) ? d.init : d.id));\n            });\n        }\n        else if ((core_1.types.isClassDeclaration(declaration) || core_1.types.isFunctionDeclaration(declaration)) &&\n            declaration.id != null) {\n            statements.push(createExportAssignment(declaration.id, declaration.id));\n        }\n    }\n    else {\n        statements = path.node.specifiers\n            .filter((specifier) => core_1.types.isExportSpecifier(specifier))\n            .map((specifier) => createExportAssignment(specifier.exported, specifier.local));\n    }\n    path.replaceWithMultiple(statements);\n};\nconst injectify = (context, source, inputSourceMap) => {\n    const { ast } = (0, core_1.transformSync)(source, {\n        ast: true,\n        code: false,\n        babelrc: false,\n        compact: false,\n        configFile: false,\n        filename: context.resourcePath,\n    });\n    core_1.types.assertFile(ast);\n    const dependencies = [];\n    const imports = [];\n    let usesESModules = false;\n    (0, core_1.traverse)(ast, {\n        CallExpression(path) {\n            if (core_1.types.isIdentifier(path.node.callee, { name: 'require' })) {\n                dependencies.push(processRequireCall(path));\n                path.skip();\n            }\n            else if (core_1.types.isImport(path.node.callee)) {\n                dependencies.push(processDynamicImport(path));\n                path.skip();\n            }\n        },\n        ImportDeclaration(path) {\n            usesESModules = true;\n            const { node, dependencyString } = processImport(path);\n            imports.push(node);\n            dependencies.push(dependencyString);\n            path.skip();\n        },\n        ExportDefaultDeclaration(path) {\n            usesESModules = true;\n            processDefaultExport(path);\n            path.skip();\n        },\n        ExportNamedDeclaration(path) {\n            usesESModules = true;\n            processNamedExport(path);\n            path.skip();\n        },\n    });\n    if (dependencies.length === 0) {\n        context.emitWarning(new Error(\"The module you are trying to inject into doesn't have any dependencies. \" +\n            'Are you sure you want to do this?'));\n    }\n    const template = usesESModules ? wrapper_template_esm_1.default : wrapper_template_1.default;\n    const wrapperModuleAst = core_1.types.file(core_1.types.program([\n        ...imports,\n        template({\n            SOURCE: ast.program.body,\n            SOURCE_PATH: core_1.types.stringLiteral(context.resourcePath),\n            DEPENDENCIES: core_1.types.arrayExpression(dependencies.map((d) => core_1.types.stringLiteral(d))),\n        }),\n    ]));\n    return (0, core_1.transformFromAstSync)(wrapperModuleAst, source, {\n        sourceMaps: context.sourceMap,\n        sourceFileName: context.resourcePath,\n        inputSourceMap: inputSourceMap || undefined,\n        babelrc: false,\n        compact: false,\n        configFile: false,\n        filename: context.resourcePath,\n    });\n};\nexports.default = injectify;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"@babel/core\");\nexports.default = (0, core_1.template)(`\n  module.exports = function __injector(__injections) {\n    __injections = __injections || {};\n\n    (function __validateInjection() {\n      var validDependencies = DEPENDENCIES;\n      var injectedDependencies = Object.keys(__injections);\n      var invalidInjectedDependencies = injectedDependencies.filter(function (dependency) {\n        return validDependencies.indexOf(dependency) === -1;\n      });\n\n      if (invalidInjectedDependencies.length > 0) {\n        var validDependenciesString = ' - ' + validDependencies.join('\\\\n - ');\n        var injectedDependenciesString = ' - ' + injectedDependencies.join('\\\\n - ');\n        var invalidDependenciesString = ' - ' + invalidInjectedDependencies.join('\\\\n - ');\n\n        throw new Error('Injection Error in ' + SOURCE_PATH + '\\\\n\\\\n' +\n          'The following injections are invalid:\\\\n' + invalidDependenciesString + '\\\\n\\\\n' +\n          'The following injections were passed in:\\\\n' + injectedDependenciesString + '\\\\n\\\\n' +\n          'Valid injection targets for this module are:\\\\n' + validDependenciesString + '\\\\n'\n        );\n      }\n    })();\n\n    __injector.sourcePath = SOURCE_PATH;\n    __injector.validDependencies = DEPENDENCIES;\n\n    var module = { exports: {} };\n    var exports = module.exports;\n\n    (function () {\n      SOURCE\n    })();\n\n    return module.exports;\n  }\n`);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"@babel/core\");\nexports.default = (0, core_1.template)(`\n  export default function __injector(__injections) {\n    __injections = __injections || {};\n\n    (function __validateInjection() {\n      var validDependencies = DEPENDENCIES;\n      var injectedDependencies = Object.keys(__injections);\n      var invalidInjectedDependencies = injectedDependencies.filter(function (dependency) {\n        return validDependencies.indexOf(dependency) === -1;\n      });\n\n      if (invalidInjectedDependencies.length > 0) {\n        var validDependenciesString = ' - ' + validDependencies.join('\\\\n - ');\n        var injectedDependenciesString = ' - ' + injectedDependencies.join('\\\\n - ');\n        var invalidDependenciesString = ' - ' + invalidInjectedDependencies.join('\\\\n - ');\n\n        throw new Error('Injection Error in ' + SOURCE_PATH + '\\\\n\\\\n' +\n          'The following injections are invalid:\\\\n' + invalidDependenciesString + '\\\\n\\\\n' +\n          'The following injections were passed in:\\\\n' + injectedDependenciesString + '\\\\n\\\\n' +\n          'Valid injection targets for this module are:\\\\n' + validDependenciesString + '\\\\n'\n        );\n      }\n    })();\n\n    __injector.sourcePath = SOURCE_PATH;\n    __injector.validDependencies = DEPENDENCIES;\n\n    var module = { exports: {} };\n    var exports = module.exports;\n\n    (function () {\n      SOURCE\n    })();\n\n    if (module.exports.hasOwnProperty('default') && Object.keys(module.exports).length === 1) {\n      module.exports = module.exports.default;\n    }\n\n    return module.exports;\n}\n`, { sourceType: 'module' });\n","module.exports = require(\"@babel/core\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","injectify_1","content","sourceMap","cacheable","code","map","default","callback","core_1","wrapper_template_1","wrapper_template_esm_1","createExportAssignment","exportIdentifier","localIdentifier","types","expressionStatement","assignmentExpression","memberExpression","identifier","context","source","inputSourceMap","ast","transformSync","babelrc","compact","configFile","filename","resourcePath","assertFile","dependencies","imports","usesESModules","traverse","CallExpression","path","isIdentifier","node","callee","name","push","assertStringLiteral","arguments","dependencyString","replaceWith","conditionalExpression","callExpression","stringLiteral","processRequireCall","skip","isImport","processDynamicImport","ImportDeclaration","injectionStatements","aliasedSpecifiers","specifiers","specifier","local","aliasIdentifier","injectionExpression","isImportSpecifier","imported","variableDeclaration","variableDeclarator","aliasedImport","importDeclaration","replaceWithMultiple","processImport","ExportDefaultDeclaration","exportAssignment","declaration","isFunctionDeclaration","functionExpression","id","params","body","generator","async","isExpression","processDefaultExport","ExportNamedDeclaration","statements","isVariableDeclaration","declarations","forEach","d","assertExpression","init","isLiteral","isClassDeclaration","filter","isExportSpecifier","exported","processNamedExport","length","emitWarning","Error","template","wrapperModuleAst","file","program","SOURCE","SOURCE_PATH","DEPENDENCIES","arrayExpression","transformFromAstSync","sourceMaps","sourceFileName","undefined","sourceType","module","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}