(()=>{"use strict";var e={607:function(e,n,i){var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const s=t(i(18));n.default=function(e,n){this.cacheable&&this.cacheable();const{code:i,map:t}=(0,s.default)(this,e,n);this.callback(null,i,t)}},18:function(e,n,i){var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const s=i(629),r=t(i(178)),o=t(i(755)),a=(e,n)=>s.types.expressionStatement(s.types.assignmentExpression("=",s.types.memberExpression(s.types.memberExpression(s.types.identifier("module"),s.types.identifier("exports"),!1),e,!1),n));n.default=(e,n,i)=>{const{ast:t}=(0,s.transformSync)(n,{ast:!0,code:!1,babelrc:!1,compact:!1,configFile:!1,filename:e.resourcePath});s.types.assertFile(t);const p=[],c=[];let d=!1;(0,s.traverse)(t,{CallExpression(e){s.types.isIdentifier(e.node.callee,{name:"require"})?(p.push((e=>{s.types.assertStringLiteral(e.node.arguments[0]);const n=e.node.arguments[0].value;return e.replaceWith(s.types.expressionStatement(s.types.conditionalExpression(s.types.callExpression(s.types.memberExpression(s.types.identifier("__injections"),s.types.identifier("hasOwnProperty"),!1),[s.types.stringLiteral(n)]),s.types.memberExpression(s.types.identifier("__injections"),s.types.stringLiteral(n),!0),e.node))),n})(e)),e.skip()):s.types.isImport(e.node.callee)&&(p.push((e=>{s.types.assertStringLiteral(e.node.arguments[0]);const n=e.node.arguments[0].value;return e.replaceWith(s.types.expressionStatement(s.types.conditionalExpression(s.types.callExpression(s.types.memberExpression(s.types.identifier("__injections"),s.types.identifier("hasOwnProperty"),!1),[s.types.stringLiteral(n)]),s.types.callExpression(s.types.memberExpression(s.types.identifier("Promise"),s.types.identifier("resolve"),!1),[s.types.memberExpression(s.types.identifier("__injections"),s.types.stringLiteral(n),!0)]),e.node))),n})(e)),e.skip())},ImportDeclaration(e){d=!0;const{node:n,dependencyString:i}=(e=>{const{node:n}=e,i=n.source.value,t=[],r=n.specifiers.map((e=>{const n=e.local,r=s.types.identifier(`__${n.name}`);let o=s.types.memberExpression(s.types.identifier("__injections"),s.types.stringLiteral(i),!0);return s.types.isImportSpecifier(e)&&(o=s.types.memberExpression(o,e.imported)),t.push(s.types.variableDeclaration("var",[s.types.variableDeclarator(n,s.types.conditionalExpression(s.types.callExpression(s.types.memberExpression(s.types.identifier("__injections"),s.types.identifier("hasOwnProperty"),!1),[s.types.stringLiteral(i)]),o,r))])),e.local=r,e})),o=s.types.importDeclaration(r,n.source);return e.replaceWithMultiple(t),{node:o,dependencyString:i}})(e);c.push(n),p.push(i),e.skip()},ExportDefaultDeclaration(e){d=!0,(e=>{let n=null;const{declaration:i}=e.node;s.types.isFunctionDeclaration(i)?n=a(s.types.identifier("default"),s.types.functionExpression(i.id,i.params,i.body,i.generator,i.async)):s.types.isExpression(e.node.declaration)&&(n=a(s.types.identifier("default"),e.node.declaration)),null!=n&&e.replaceWith(n)})(e),e.skip()},ExportNamedDeclaration(e){d=!0,(e=>{let n=[];const{declaration:i}=e.node;i?(n.push(i),s.types.isVariableDeclaration(i)?i.declarations.forEach((e=>{s.types.assertExpression(e.id),n.push(a(e.id,e.init&&s.types.isLiteral(e.init)?e.init:e.id))})):(s.types.isClassDeclaration(i)||s.types.isFunctionDeclaration(i))&&null!=i.id&&n.push(a(i.id,i.id))):n=e.node.specifiers.filter((e=>s.types.isExportSpecifier(e))).map((e=>a(e.exported,e.local))),e.replaceWithMultiple(n)})(e),e.skip()}}),0===p.length&&e.emitWarning(new Error("The module you are trying to inject into doesn't have any dependencies. Are you sure you want to do this?"));const l=d?o.default:r.default,u=s.types.file(s.types.program([...c,l({SOURCE:t.program.body,SOURCE_PATH:s.types.stringLiteral(e.resourcePath),DEPENDENCIES:s.types.arrayExpression(p.map((e=>s.types.stringLiteral(e))))})]));return(0,s.transformFromAstSync)(u,n,{sourceMaps:e.sourceMap,sourceFileName:e.resourcePath,inputSourceMap:i||void 0,babelrc:!1,compact:!1,configFile:!1,filename:e.resourcePath})}},178:(e,n,i)=>{Object.defineProperty(n,"__esModule",{value:!0});const t=i(629);n.default=(0,t.template)("\n  module.exports = function __injector(__injections) {\n    __injections = __injections || {};\n\n    (function __validateInjection() {\n      var validDependencies = DEPENDENCIES;\n      var injectedDependencies = Object.keys(__injections);\n      var invalidInjectedDependencies = injectedDependencies.filter(function (dependency) {\n        return validDependencies.indexOf(dependency) === -1;\n      });\n\n      if (invalidInjectedDependencies.length > 0) {\n        var validDependenciesString = ' - ' + validDependencies.join('\\n - ');\n        var injectedDependenciesString = ' - ' + injectedDependencies.join('\\n - ');\n        var invalidDependenciesString = ' - ' + invalidInjectedDependencies.join('\\n - ');\n\n        throw new Error('Injection Error in ' + SOURCE_PATH + '\\n\\n' +\n          'The following injections are invalid:\\n' + invalidDependenciesString + '\\n\\n' +\n          'The following injections were passed in:\\n' + injectedDependenciesString + '\\n\\n' +\n          'Valid injection targets for this module are:\\n' + validDependenciesString + '\\n'\n        );\n      }\n    })();\n\n    __injector.sourcePath = SOURCE_PATH;\n    __injector.validDependencies = DEPENDENCIES;\n\n    var module = { exports: {} };\n    var exports = module.exports;\n\n    (function () {\n      SOURCE\n    })();\n\n    return module.exports;\n  }\n")},755:(e,n,i)=>{Object.defineProperty(n,"__esModule",{value:!0});const t=i(629);n.default=(0,t.template)("\n  export default function __injector(__injections) {\n    __injections = __injections || {};\n\n    (function __validateInjection() {\n      var validDependencies = DEPENDENCIES;\n      var injectedDependencies = Object.keys(__injections);\n      var invalidInjectedDependencies = injectedDependencies.filter(function (dependency) {\n        return validDependencies.indexOf(dependency) === -1;\n      });\n\n      if (invalidInjectedDependencies.length > 0) {\n        var validDependenciesString = ' - ' + validDependencies.join('\\n - ');\n        var injectedDependenciesString = ' - ' + injectedDependencies.join('\\n - ');\n        var invalidDependenciesString = ' - ' + invalidInjectedDependencies.join('\\n - ');\n\n        throw new Error('Injection Error in ' + SOURCE_PATH + '\\n\\n' +\n          'The following injections are invalid:\\n' + invalidDependenciesString + '\\n\\n' +\n          'The following injections were passed in:\\n' + injectedDependenciesString + '\\n\\n' +\n          'Valid injection targets for this module are:\\n' + validDependenciesString + '\\n'\n        );\n      }\n    })();\n\n    __injector.sourcePath = SOURCE_PATH;\n    __injector.validDependencies = DEPENDENCIES;\n\n    var module = { exports: {} };\n    var exports = module.exports;\n\n    (function () {\n      SOURCE\n    })();\n\n    if (module.exports.hasOwnProperty('default') && Object.keys(module.exports).length === 1) {\n      module.exports = module.exports.default;\n    }\n\n    return module.exports;\n}\n",{sourceType:"module"})},629:e=>{e.exports=require("@babel/core")}},n={},i=function i(t){var s=n[t];if(void 0!==s)return s.exports;var r=n[t]={exports:{}};return e[t].call(r.exports,r,r.exports,i),r.exports}(607),t=exports;for(var s in i)t[s]=i[s];i.__esModule&&Object.defineProperty(t,"__esModule",{value:!0})})();
//# sourceMappingURL=index.js.map